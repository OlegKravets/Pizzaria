// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzaria.Data;

#nullable disable

namespace Pizzaria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230413231842_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pizzaria.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Oleh"
                        });
                });

            modelBuilder.Entity("Pizzaria.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentCustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaOrders");
                });

            modelBuilder.Entity("Pizzaria.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("BasePrice")
                        .HasColumnType("real");

                    b.Property<bool>("IsBeef")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDoubleCheese")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTomato")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 5f,
                            IsBeef = false,
                            IsDoubleCheese = false,
                            IsTomato = false,
                            Name = "Simple"
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 7f,
                            IsBeef = false,
                            IsDoubleCheese = false,
                            IsTomato = false,
                            Name = "Mushroom"
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 6f,
                            IsBeef = false,
                            IsDoubleCheese = false,
                            IsTomato = false,
                            Name = "Margarita"
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 10f,
                            IsBeef = false,
                            IsDoubleCheese = false,
                            IsTomato = false,
                            Name = "King"
                        });
                });

            modelBuilder.Entity("Pizzaria.Models.Order", b =>
                {
                    b.HasOne("Pizzaria.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });
#pragma warning restore 612, 618
        }
    }
}
